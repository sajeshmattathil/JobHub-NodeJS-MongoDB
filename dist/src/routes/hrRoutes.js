"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const router = express_1.default.Router();
const inversify_1 = require("inversify");
const Utils_1 = require("../../Utils");
const chatController_1 = __importDefault(require("../../Controller/chatController"));
const hrRepository_1 = require("../repositories/hrRepository");
const hrInteractor_1 = require("../interactors/hrInteractor");
const HRController_1 = require("../controllers/HRController");
const jwtHR_1 = __importDefault(require("../../Middleware/JWT/jwtHR"));
const container = new inversify_1.Container();
container.bind(Utils_1.INTERFACE_TYPE.HRRepository).to(hrRepository_1.HRRepository);
container.bind(Utils_1.INTERFACE_TYPE.HRInteractor).to(hrInteractor_1.HRInteractor);
container.bind(Utils_1.INTERFACE_TYPE.HRController).to(HRController_1.HRController);
const hrController = container.get(Utils_1.INTERFACE_TYPE.HRController);
router.post('/signup_submit', hrController.hrSignup.bind(hrController));
router.post('/verifyOtp', hrController.verifyOtp.bind(hrController));
router.post('/login_submit', hrController.hrLogin.bind(hrController));
router.post('/createJOb', jwtHR_1.default.verifyToken, hrController.createJob.bind(hrController));
router.get('/getJobs/:id', jwtHR_1.default.verifyToken, hrController.getJobs.bind(hrController));
router.get('/getHR', jwtHR_1.default.verifyToken, hrController.getHR.bind(hrController));
router.post('/update/:id', jwtHR_1.default.verifyToken, hrController.updateProfile.bind(hrController));
router.get('/getJobDetails/:id', jwtHR_1.default.verifyToken, hrController.getJobDetails.bind(hrController));
router.delete('/deleteJob/:id', jwtHR_1.default.verifyToken, hrController.deleteJob.bind(hrController));
router.post('/updateJob', jwtHR_1.default.verifyToken, hrController.updateJob.bind(hrController));
router.patch('/updateJobpostHRViewed/:id', jwtHR_1.default.verifyToken, hrController.updateJobpostHRViewed.bind(hrController));
router.post('/downloadFile', hrController.downloadFileFromChat.bind(hrController));
router.patch('/shortListUser', jwtHR_1.default.verifyToken, hrController.shortListUser);
router.get('/shortListedUsers/:jobId', jwtHR_1.default.verifyToken, hrController.getShortListedUsers.bind(hrController));
router.get('/getChat', jwtHR_1.default.verifyToken, chatController_1.default.getChat.bind(hrController));
router.patch('/removeFromShortListed', jwtHR_1.default.verifyToken, hrController.removeFromShortListed.bind(hrController));
router.get('/getPrevChatUsers', jwtHR_1.default.verifyToken, hrController.getPrevChatUsers.bind(hrController));
router.get('/getFollowers', jwtHR_1.default.verifyToken, hrController.getFollowers.bind(hrController));
exports.default = router;
